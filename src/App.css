@import url('https://fonts.googleapis.com/css?family=Dosis');
.App{
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    width: 100vw;
    height: 100vh;
}
.inp{
height: 100%;
width: 100%;
background-image: url("https://images.pexels.com/photos/6517/parking-multi-storey-car-park.jpg?cs=srgb&dl=multi-storey-car-park-parking-6517.jpg&fm=jpg");
height: 870px; 
background-position: center; 
background-repeat: no-repeat; 
background-size: cover; 
justify-content: center;
text-align: center;

}
.acss{

padding-top:  20%;
align-content: center;
align-items: center;
justify-content: center;
text-align: center;
display: flex
}
.Wrapper{
background-color: rgba(252, 252, 252, 0.472);
border-radius: 20px;
padding: 50px;
width: 50%;
align-content: center;
flex: 0 0 70%;
max-width: 80%;

}
.form{
    background-color: rgba(252, 252, 252, 0.472);
    border-radius: 20px;
    padding: 50px;
    width: 100%;
    align-content: center;
    flex: 0 0 70%;
    max-width: 80%; 
}

:root {
    /* generic */
    --gutterSm: 0.4rem;
    --gutterMd: 0.8rem;
    --gutterLg: 1.6rem;
    --gutterXl: 2.4rem;
    --gutterXx: 7.2rem;
    --colorPrimary400: #79c257;
    --colorPrimary600: #31660e;
    --colorPrimary800: #0c550f;
    --fontSizeSm: 1.2rem;
    --fontSizeMd: 1.6rem;
    --fontSizeLg: 2.1rem;
    --fontSizeXl: 2.8rem;
    --fontSizeXx: 3.6rem;
    --lineHeightSm: 1.1;
    --lineHeightMd: 1.8;
    --transitionDuration: 300ms;
    --transitionTF: cubic-bezier(0.645, 0.045, 0.355, 1);
    
    /* floated labels */
    --inputPaddingV: var(--gutterMd);
    --inputPaddingH: var(--gutterLg);
    --inputFontSize: var(--fontSizeLg);
    --inputLineHeight: var(--lineHeightMd);
    --labelScaleFactor: 0.8;
    --labelDefaultPosY: 50%;
    --labelTransformedPosY: calc(
      (var(--labelDefaultPosY)) - 
      (var(--inputPaddingV) * var(--labelScaleFactor)) - 
      (var(--inputFontSize) * var(--inputLineHeight))
    );
    --inputTransitionDuration: var(--transitionDuration);
    --inputTransitionTF: var(--transitionTF);
  }
  
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  

  

  /* .Wrapper {
    flex: 0 0 80%;
    max-width: 80%;
  } */
  
  .Title {
    margin: 0 0 var(--gutterXx) 0;
    padding: 0;
    color: #fff;
    font-size: var(--fontSizeXx);
    font-weight: 400;
    line-height: var(--lineHeightSm);
    text-align: center;
    text-shadow: -0.1rem 0.1rem 0.2rem var(--colorPrimary800);
  }
  
  .Input {
    position: relative;
    padding: 10px;
border-radius: 10px;
margin-top: 20px;
margin-bottom: 20px;
width:50%
  }
  
  .Input-text {
    display: block;
    margin: 0;
    padding: var(--inputPaddingV) var(--inputPaddingH);
    color: inherit;
    width: 100%;
    font-family: inherit;
    font-size: var(--inputFontSize);
    font-weight: inherit;
    line-height: var(--inputLineHeight);
    border: none;
    border-radius: 0.4rem;
    transition: box-shadow var(--transitionDuration);
  }
  
  .Input-text::placeholder {
    color: #B0BEC5;
  }
  
  .Input-text:focus {
    outline: none;
    box-shadow: 0.2rem 0.8rem 1.6rem var(--colorPrimary600);
  }
  
  .Input-label {
    display: block;
    position: absolute;
    bottom: 50%;
    left: 1rem;
    color: #fff;
    font-family: inherit;
    font-size: var(--inputFontSize);
    font-weight: inherit;
    line-height: var(--inputLineHeight);
    opacity: 0;
    transform: 
      translate3d(0, var(--labelDefaultPosY), 0)
      scale(1);
    transform-origin: 0 0;
    transition:
      opacity var(--inputTransitionDuration) var(--inputTransitionTF),
      transform var(--inputTransitionDuration) var(--inputTransitionTF),
      visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
      z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF);
  }
  
  .Input-text:placeholder-shown + .Input-label {
    visibility: hidden;
    z-index: -1;
  }
  
  .Input-text:not(:placeholder-shown) + .Input-label,
  .Input-text:focus:not(:placeholder-shown) + .Input-label {
    visibility: visible;
    z-index: 1;
    opacity: 1;
    transform:
      translate3d(0, var(--labelTransformedPosY), 0)
      scale(var(--labelScaleFactor));
    transition:
      transform var(--inputTransitionDuration),
      visibility 0ms,
      z-index 0ms;
  }

  button{
      border-radius: 20px;
      width: 150px;
      height: 50px;
      font-size: 20px;
      background-color: #88b46b;
      border: #7aa160 solid 1px
  }
  button:hover  {
    background-color: #7aa160
}
  .info{
    box-sizing: border-box;
  }
  
  /* Create two unequal columns that floats next to each other */
  .column {
    float: left;
    padding: 10px;
    height: 100%; /* Should be removed. Only for demonstration */
  }
  
  .left {
    width: 25%;
    background-color: #0d2629;
    height: 870px;
    justify-content: center;
    align-items: center;
    padding-top: 60px;
    position: fixed relative
  }
  
  .right {
    width: 75%;
  }
  
  /* Clear floats after the columns */
  .row:after {
    content: "";
    display: table;
    clear: both;
  }

  @media screen and (max-width: 600px) {
    .column {
      width: 100%;
    }
  }
  .proimg{
    border-radius: 50%;
    position: relative;
    width: 50%
  }

  .cars {
    width: 400px;
    height: 350px;
    display: flex;
    flex-direction: column;
    margin: 10px 5px;
    padding: 10px;
    background-color: rgba(238, 238, 238, 0.692);
    border-radius:4px;
    -webkit-box-shadow:0 1px 1px rgba(0,0,0,.05);
    box-shadow:0 1px 1px rgba(0,0,0,.05)
  }
  .cars > button {
flex-direction: column;
padding: 5px;

  }
  .bt{
    justify-content: space-between;
    flex-direction: row;
    padding: 5px;
  }
  .cars > h2 {
    display: flex;
    align-items: center;
    justify-content: left;
    text-align: left;
    /* padding: 5px; */
    color: rgb(12, 12, 12);
  }
  .shows {
    display: flex;
    width: 100%;
    max-width: 1100px;
    flex-wrap: wrap;
    justify-content: space-between;
    margin: 0 auto;
    border-radius: 12px;
    padding: 20px;
  }
  

  

  

  